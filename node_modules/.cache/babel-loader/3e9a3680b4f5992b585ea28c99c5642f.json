{"ast":null,"code":"var _jsxFileName = \"/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentContent, setCurrentContent] = useState([]);\n  useEffect(() => {\n    setInitialState();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(BodyWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Filters, {\n    filters: drinks.map(category => category.filter),\n    applyFiltersHandler: applyFiltersHandler,\n    toggleFilterHandler: toggleFilterHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Content, {\n    drinks: drinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))); //Set initial state at the first render\n\n  async function setInitialState() {\n    let filtersArray;\n    fetch(endpoints.filters).then(responce => responce.json()).then(array => {\n      setFilters(array.drinks.map(filter => filter.strCategory));\n      filtersArray = array.drinks;\n      return array;\n    }).then(categories => {\n      const drinksPromises = [];\n\n      for (let category of categories.drinks) {\n        drinksPromises.push(fetch(endpoints.drinks(category.strCategory)));\n      }\n\n      ;\n      return Promise.all(drinksPromises);\n    }).then(drinksPromices => {\n      return Promise.all(drinksPromices.map(prom => prom.json()));\n    }).then(drinksArray => {\n      const initialState = drinksArray.map((drinks, index) => {\n        return {\n          filter: filtersArray[index].strCategory,\n          active: true,\n          drinks: [...drinks.drinks]\n        };\n      });\n      setDrinks(initialState);\n    }).catch(error => console.error(error));\n  }\n\n  function defineCurrentContent() {\n    const paginate = (array, number) => {\n      const perPage = 10;\n      const result = array.slice(number * perPage - perPage, number + perPage);\n      return result.length === 0 ? null : result;\n    }; // const content = drinks.map(category => {\n    //   if (filters.)\n    // })\n\n  } //Apply button handler\n\n\n  function applyFiltersHandler() {\n    console.log(filters);\n    setDrinks(state => {\n      return state.map(category => {\n        if (filters.includes(category.filter)) return {\n          active: true,\n          filter: category.filter,\n          drinks: [...category.drinks]\n        };else return {\n          active: false,\n          filter: category.filter,\n          drinks: [...category.drinks]\n        };\n      });\n    });\n    console.log(filters);\n  } //Checkbox onChange handler\n\n\n  function toggleFilterHandler(e) {\n    e.persist();\n    setFilters(state => {\n      if (e.target.checked) return [...state, e.target.value];else return state.filter(name => e.target.value !== name);\n    });\n  }\n\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js"],"names":["React","useState","useEffect","endpoints","Header","BodyWrapper","Filters","Content","App","filters","setFilters","drinks","setDrinks","currentPage","setCurrentPage","currentContent","setCurrentContent","setInitialState","map","category","filter","applyFiltersHandler","toggleFilterHandler","filtersArray","fetch","then","responce","json","array","strCategory","categories","drinksPromises","push","Promise","all","drinksPromices","prom","drinksArray","initialState","index","active","catch","error","console","defineCurrentContent","paginate","number","perPage","result","slice","length","log","state","includes","e","persist","target","checked","value","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\n\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentContent, setCurrentContent] = useState([]);\n  useEffect(()=> {\n    setInitialState();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Header />\n      <BodyWrapper>\n        <Filters filters={drinks.map(category => category.filter)} \n          applyFiltersHandler={applyFiltersHandler}\n          toggleFilterHandler={toggleFilterHandler} \n        />\n        <Content drinks={drinks} />\n      </BodyWrapper>\n    </div>\n  );\n  \n  //Set initial state at the first render\n  async function setInitialState() {\n    let filtersArray;\n    fetch(endpoints.filters)\n      .then(responce => responce.json())\n      .then(array => {\n        setFilters(array.drinks.map(filter => filter.strCategory));\n        filtersArray = array.drinks;\n        return array;\n      })\n      .then(categories => {\n        const drinksPromises = [];\n        for (let category of categories.drinks) {\n          drinksPromises.push(fetch(endpoints.drinks(category.strCategory)));\n        };\n        return Promise.all(drinksPromises);\n      })\n      .then(drinksPromices => {\n        return Promise.all(drinksPromices.map(prom => prom.json()));\n      })\n      .then(drinksArray => {\n        const initialState = drinksArray.map((drinks, index) => {\n          return {\n            filter: filtersArray[index].strCategory,\n            active: true,\n            drinks: [\n              ...drinks.drinks\n            ]\n          }\n        });\n        setDrinks(initialState);\n      })\n      .catch(error => console.error(error));\n  }\n\n  function defineCurrentContent() {\n    const paginate = (array, number) => {\n      const perPage = 10;\n      const result = array.slice((number * perPage) - perPage, number + perPage);\n      return result.length === 0 ? null : result;\n    }\n    // const content = drinks.map(category => {\n    //   if (filters.)\n    // })\n\n  }\n  //Apply button handler\n  function applyFiltersHandler() {\n    console.log(filters);\n    setDrinks(state => {\n      return state.map(category => {\n        if (filters.includes(category.filter)) return {\n          active: true,\n          filter: category.filter,\n          drinks: [...category.drinks]\n        };\n        else return {\n          active: false,\n          filter: category.filter,\n          drinks: [...category.drinks]\n        };\n      });\n    });\n    console.log(filters);\n  }\n  //Checkbox onChange handler\n  function toggleFilterHandler(e) {\n    e.persist();\n    setFilters(state => {\n        if (e.target.checked) return [...state, e.target.value];\n        else return state.filter(name => e.target.value !== name);\n    });\n  };\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}