{"ast":null,"code":"var _jsxFileName = \"/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState(null);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    setInitialState();\n  }, []);\n  const cats = [{\n    name: 'Coctails1'\n  }, {\n    name: 'Coctails2'\n  }, {\n    name: 'Coctails3'\n  }, {\n    name: 'Coctails4'\n  }];\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(BodyWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Filters, {\n    filters: cats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n\n  async function setInitialState() {\n    fetch(endpoints.filters).then(responce => responce.json()).then(array => {\n      setFilters(array.drinks);\n      return array;\n    }).then(categories => {\n      const drinksPromices = [];\n\n      for (let category of categories.drinks) {\n        drinksPromices.push(fetch(category.strCategory));\n      }\n\n      ;\n      return Promise.all(drinksPromices.map(prom => prom.json()));\n    }) // .then(drinksPromices => {\n    //   //const drinkJsons = drinksPromices.map(prom => prom.json());\n    //   //return Promise.all(drinkJsons);\n    //   return drinksPromices[0].json();\n    // })\n    .then(drinks => console.log(drinks));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js"],"names":["React","useState","useEffect","endpoints","Header","BodyWrapper","Filters","Content","App","filters","setFilters","drinks","setDrinks","setInitialState","cats","name","fetch","then","responce","json","array","categories","drinksPromices","category","push","strCategory","Promise","all","map","prom","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMC,IAAI,GAAG,CACX;AAACC,IAAAA,IAAI,EAAE;AAAP,GADW,EAEX;AAACA,IAAAA,IAAI,EAAE;AAAP,GAFW,EAGX;AAACA,IAAAA,IAAI,EAAE;AAAP,GAHW,EAIX;AAACA,IAAAA,IAAI,EAAE;AAAP,GAJW,CAAb;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;;AAUA,iBAAeD,eAAf,GAAiC;AAC/BG,IAAAA,KAAK,CAACb,SAAS,CAACM,OAAX,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AACbV,MAAAA,UAAU,CAACU,KAAK,CAACT,MAAP,CAAV;AACA,aAAOS,KAAP;AACD,KALH,EAMGH,IANH,CAMQI,UAAU,IAAI;AAClB,YAAMC,cAAc,GAAG,EAAvB;;AACA,WAAK,IAAIC,QAAT,IAAqBF,UAAU,CAACV,MAAhC,EAAwC;AACtCW,QAAAA,cAAc,CAACE,IAAf,CAAoBR,KAAK,CAACO,QAAQ,CAACE,WAAV,CAAzB;AACD;;AAAA;AACD,aAAOC,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACM,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACV,IAAL,EAA3B,CAAZ,CAAP;AACD,KAZH,EAaE;AACA;AACA;AACA;AACA;AAjBF,KAkBGF,IAlBH,CAkBQN,MAAM,IAAImB,OAAO,CAACC,GAAR,CAAYpB,MAAZ,CAlBlB;AAmBD;AACF;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\n\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState(null);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(()=> {\n    setInitialState();\n  }, []);\n  const cats = [\n    {name: 'Coctails1'},\n    {name: 'Coctails2'},\n    {name: 'Coctails3'},\n    {name: 'Coctails4'}\n  ]\n  return (\n    <div className=\"App\">\n      <Header />\n      <BodyWrapper>\n        <Filters filters={cats} />\n        <Content />\n      </BodyWrapper>\n    </div>\n  );\n\n  async function setInitialState() {\n    fetch(endpoints.filters)\n      .then(responce => responce.json())\n      .then(array => {\n        setFilters(array.drinks);\n        return array;\n      })\n      .then(categories => {\n        const drinksPromices = [];\n        for (let category of categories.drinks) {\n          drinksPromices.push(fetch(category.strCategory));\n        };\n        return Promise.all(drinksPromices.map(prom => prom.json()));\n      })\n      // .then(drinksPromices => {\n      //   //const drinkJsons = drinksPromices.map(prom => prom.json());\n      //   //return Promise.all(drinkJsons);\n      //   return drinksPromices[0].json();\n      // })\n      .then(drinks => console.log(drinks));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}