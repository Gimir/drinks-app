{"ast":null,"code":"var _jsxFileName = \"/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState(null);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    setInitialState();\n  }, []);\n  const cats = [{\n    name: 'Coctails1'\n  }, {\n    name: 'Coctails2'\n  }, {\n    name: 'Coctails3'\n  }, {\n    name: 'Coctails4'\n  }];\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(BodyWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Filters, {\n    filters: cats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n\n  async function setInitialState() {\n    const fetchFilters = await fetch(endpoints.filters);\n    console.log(fetchFilters);\n    const filtersArray = [];\n    fetchFilters.then(responce => responce.json()).then(array => {\n      setFilters(array.drinks);\n      filtersArray = array;\n      return array;\n    }).then(categories => {\n      const drinksPromices = [];\n\n      for (let category of categories.drinks) {\n        drinksPromices.push(fetch(endpoints.drinks(category.strCategory)));\n      }\n\n      ;\n      return Promise.all(drinksPromices);\n    }).then(drinksPromices => {\n      return Promise.all(drinksPromices.map(prom => prom.json()));\n    }).then(drinksArray => {\n      const initialState = drinksArray.map((drinks, index) => {\n        return {\n          filter: filtersArray[index].strCategory,\n          drinks: [...drinks.drinks]\n        };\n      });\n      setDrinks(initialState);\n      return initialState;\n    }).then(state => console.log(state)).catch(error => console.error(error));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/drinks-app/client/src/App.js"],"names":["React","useState","useEffect","endpoints","Header","BodyWrapper","Filters","Content","App","filters","setFilters","drinks","setDrinks","setInitialState","cats","name","fetchFilters","fetch","console","log","filtersArray","then","responce","json","array","categories","drinksPromices","category","push","strCategory","Promise","all","map","prom","drinksArray","initialState","index","filter","state","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport endpoints from './api/endpoints';\n\nimport Header from './components/Header';\nimport BodyWrapper from './components/BodyWrapper';\nimport Filters from './components/Filters';\nimport Content from './components/Content';\n\nfunction App() {\n  const [filters, setFilters] = useState(null);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(()=> {\n    setInitialState();\n  }, []);\n  const cats = [\n    {name: 'Coctails1'},\n    {name: 'Coctails2'},\n    {name: 'Coctails3'},\n    {name: 'Coctails4'}\n  ]\n  return (\n    <div className=\"App\">\n      <Header />\n      <BodyWrapper>\n        <Filters filters={cats} />\n        <Content />\n      </BodyWrapper>\n    </div>\n  );\n\n  async function setInitialState() {\n    const fetchFilters = await fetch(endpoints.filters);\n    console.log(fetchFilters);\n    const filtersArray = [];\n    fetchFilters\n      .then(responce => responce.json())\n      .then(array => {\n        setFilters(array.drinks);\n        filtersArray = array;\n        return array;\n      })\n      .then(categories => {\n        const drinksPromices = [];\n        for (let category of categories.drinks) {\n          drinksPromices.push(fetch(endpoints.drinks(category.strCategory)));\n        };\n        return Promise.all(drinksPromices);\n      })\n      .then(drinksPromices => {\n        return Promise.all(drinksPromices.map(prom => prom.json()));\n      })\n      .then(drinksArray => {\n        const initialState = drinksArray.map((drinks, index) => {\n          return {\n            filter: filtersArray[index].strCategory,\n            drinks: [\n              ...drinks.drinks\n            ]\n          }\n        });\n        setDrinks(initialState);\n        return initialState;\n      })\n      .then (state => console.log(state))\n      .catch(error => console.error(error));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}