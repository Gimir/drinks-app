{"ast":null,"code":"var _jsxFileName = \"/home/abbas/jsPractice/tasks/drinks-app/client/src/components/Filters.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nconst StyledSidebar = styled.aside`\n    width: 325px;\n    min-width: 325px;\n    padding-top: 30px;\n    display: flex;\n    justify-content: center;\n    background-color: #fff;\n    color: #818181;\n`;\nconst StyledForm = styled.form`\n    \n    input[type=checkbox] {\n        display: none;\n    }\n    input[type=checkbox] + label {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n    input[type=checkbox] + label > span {\n        display: block;\n        width: 18px;\n        height: 20px;\n        border: 2px solid #818181;\n        background-color: #fff;\n        border-radius: 5px;\n        margin-right: 20px;\n        position: relative;\n        transition: .2s;\n    }\n    input[type=checkbox]:checked + label > span:after {\n        border-color: #818181;\n    }\n    input[type=checkbox] + label > span:after {\n        content: \"\";\n        position: absolute;\n        width: 3px;\n        height: 8px;\n        border-right: 3px solid #818181;\n        border-bottom: 3px solid #818181;\n        border-color: #fff;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%) rotateZ(40deg);\n    }\n`;\n\nconst Filters = ({\n  filters\n}) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n  useEffect(() => {\n    setActiveFilters(filters.map(filter => filter.strCategory));\n  }, [filters]);\n  return React.createElement(StyledSidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, filters.map((filter, index) => React.createElement(Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: filter.strCategory,\n    value: filter.strCategory,\n    defaultChecked: true,\n    onChange: e => toggleFilterHandler(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: filter.strCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, filter.strCategory)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Apply\")));\n\n  function toggleFilterHandler(e) {\n    e.persist();\n    console.log(activeFilters);\n    setActiveFilters(state => {\n      if (e.target.checked) return [...state, e.target.value];else return state.filter(name => e.target.value !== name);\n    });\n  }\n\n  ;\n};\n\nexport default Filters;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/drinks-app/client/src/components/Filters.js"],"names":["React","Fragment","useState","useEffect","styled","Button","StyledSidebar","aside","StyledForm","form","Filters","filters","activeFilters","setActiveFilters","map","filter","strCategory","index","e","toggleFilterHandler","persist","console","log","state","target","checked","value","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,MAAMC,aAAa,GAAGF,MAAM,CAACG,KAAM;;;;;;;;CAAnC;AAUA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AAuCA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB,CAACF,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,WAA7B,CAAD,CAAhB;AACH,GAFQ,EAEN,CAACL,OAAD,CAFM,CAAT;AAGA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASE,KAAT,KACR,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AACI,IAAA,EAAE,EAAEF,MAAM,CAACC,WADf;AAEI,IAAA,KAAK,EAAED,MAAM,CAACC,WAFlB;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,QAAQ,EAAEE,CAAC,IAAIC,mBAAmB,CAACD,CAAD,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAO,IAAA,OAAO,EAAEH,MAAM,CAACC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,MAAM,CAACC,WAAX,CAFJ,CAPJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,CAFR,EAkBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBJ,CADJ,CADJ;;AAyBA,WAASG,mBAAT,CAA6BD,CAA7B,EAAgC;AAC5BA,IAAAA,CAAC,CAACE,OAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACAC,IAAAA,gBAAgB,CAACU,KAAK,IAAI;AACtB,UAAIL,CAAC,CAACM,MAAF,CAASC,OAAb,EAAsB,OAAO,CAAC,GAAGF,KAAJ,EAAWL,CAAC,CAACM,MAAF,CAASE,KAApB,CAAP,CAAtB,KACK,OAAOH,KAAK,CAACR,MAAN,CAAaY,IAAI,IAAIT,CAAC,CAACM,MAAF,CAASE,KAAT,KAAmBC,IAAxC,CAAP;AACR,KAHe,CAAhB;AAIH;;AAAA;AAEJ,CAvCD;;AAyCA,eAAejB,OAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\n\nconst StyledSidebar = styled.aside`\n    width: 325px;\n    min-width: 325px;\n    padding-top: 30px;\n    display: flex;\n    justify-content: center;\n    background-color: #fff;\n    color: #818181;\n`;\n\nconst StyledForm = styled.form`\n    \n    input[type=checkbox] {\n        display: none;\n    }\n    input[type=checkbox] + label {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n    input[type=checkbox] + label > span {\n        display: block;\n        width: 18px;\n        height: 20px;\n        border: 2px solid #818181;\n        background-color: #fff;\n        border-radius: 5px;\n        margin-right: 20px;\n        position: relative;\n        transition: .2s;\n    }\n    input[type=checkbox]:checked + label > span:after {\n        border-color: #818181;\n    }\n    input[type=checkbox] + label > span:after {\n        content: \"\";\n        position: absolute;\n        width: 3px;\n        height: 8px;\n        border-right: 3px solid #818181;\n        border-bottom: 3px solid #818181;\n        border-color: #fff;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%) rotateZ(40deg);\n    }\n`;\n\nconst Filters = ({ filters }) => {\n    const [activeFilters, setActiveFilters] = useState([]);\n    useEffect(() => {\n        setActiveFilters(filters.map(filter => filter.strCategory));\n    }, [filters]);\n    return (\n        <StyledSidebar>\n            <StyledForm>\n                {\n                    filters.map((filter, index) => (\n                        <Fragment key={index}>\n                            <input type=\"checkbox\"\n                                id={filter.strCategory}\n                                value={filter.strCategory}\n                                defaultChecked\n                                onChange={e => toggleFilterHandler(e)}\n                            />\n                            <label htmlFor={filter.strCategory}>\n                                <span></span>\n                                <p>{filter.strCategory}</p>\n                            </label>\n                            <br />\n                        </Fragment>\n                    ))\n                }\n                <Button>Apply</Button>\n            </StyledForm>\n        </StyledSidebar>\n    );\n\n    function toggleFilterHandler(e) {\n        e.persist();\n        console.log(activeFilters);\n        setActiveFilters(state => {\n            if (e.target.checked) return [...state, e.target.value];\n            else return state.filter(name => e.target.value !== name);\n        });\n    };\n\n};\n\nexport default Filters;"]},"metadata":{},"sourceType":"module"}